
{%- set baseUrl = 'https://hgrid.io' %}
{%- set pageTitle = title + ' | ' + 'hgrid' -%}
{%- set siteTitle = 'hgrid | Lightweight CSS Utility Kit' -%}
{%- set currentUrl = baseUrl + page.url -%}

<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>{{ meta.title }}</title>
<style type="text/css">@font-face{font-family:'Heebo';src:url('/assets/font/subset-Heebo-SemiBold.woff2') format('woff2'), url('/assets/font/subset-Heebo-SemiBold.woff') format('woff');font-weight:600;font-style:normal;font-display:swap}@font-face{font-family:'Heebo';src:url('/assets/font/subset-Heebo-Regular.woff2') format('woff2'), url('/assets/font/subset-Heebo-Regular.woff') format('woff');font-weight:400;font-style:normal;font-display:swap}</style>
<meta name="description" content="{{ meta.description }}">
<meta name="robots" content="index, follow">
<meta name="author" content="Atle Hansson">
<link rel="stylesheet" href="/assets/css/style.min.css">
<link rel="canonical" href="{{ currentUrl }}" />
<meta property="og:site_name" content="{{ siteTitle }}" />
<meta property="og:title" content="{{ pageTitle }}" />
<meta property="og:type" content="website" />
<meta property="og:url" content="{{ currentUrl }}" />
<meta name="twitter:card" content="...." />
<meta property="og:image" content="{{ thumbnail }}" />
<meta name="twitter:image" content="{{ thumbnail }}" />
<meta property="og:image:alt" content="Page image for {{ site.name }}" />
<meta name="twitter:image:alt" content="Page image for {{ site.name }}" />
<meta property="og:image:width" content="1200" />
<meta property="og:image:height" content="630" />
<meta name="description" content="{{ description }}" />
<meta name="twitter:description" content="{{ description }}" />
<meta property="og:description" content="{{ description }}" />

<script type="text/javascript">
  const colorMode = (() => {
    const initialMode = () => {
      const persistedMode = window.localStorage.getItem('theme')
      const hasPersistedMode = typeof persistedMode === 'string'
      if (hasPersistedMode) {
        return persistedMode
      }
      const preferredMode = window.matchMedia('(prefers-color-scheme: dark)')
      const hasPreferredMode = typeof preferredMode.matches === 'boolean'
      if (hasPreferredMode) {
        return preferredMode.matches ? 'dark' : 'light'
      }
      return 'light' // default if no preference found
    }
    const preferredTheme = initialMode()
    document.documentElement.setAttribute('data-theme', preferredTheme)
    const meta = document.createElement('meta')
    meta.name = 'theme-color'
    if (preferredTheme === 'dark') { meta.content = '#060323' } 
    else { meta.content = '#23004b'}
    document.getElementsByTagName('head')[0].prepend(meta)
    return { preferredTheme, meta }
  })()
</script>
<link rel="icon" type="image/png" href="/assets/img/icon.png">