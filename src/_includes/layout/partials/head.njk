
{%- set baseUrl = 'https://hgrid.io' %}
{%- set siteTitle = 'hgrid | a lightweight and practical CSS utility kit' -%}
{%- set currentUrl = baseUrl + page.url -%}
{%- set socialImage = '/assets/img/social.jpg' -%}
{%- set favicon = '/assets/img/icon.png' -%}

<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>{{ meta.title }}</title>
<style type="text/css">@font-face{font-family:'Wotfard';src:url('/assets/font/subset-Wotfard-Regular.woff2') format('woff2'), url('/assets/font/subset-Wotfard-Regular.woff') format('woff');font-style:normal;font-display:swap}</style>
<link rel="stylesheet" href="/assets/css/style.min.css?v=1.0.1">
<link rel="canonical" href="{{ currentUrl }}" />
<link rel="icon" type="image/png" href="{{ baseUrl }}{{ favicon }}">
<meta name="description" content="{{ meta.description }}">
<meta name="robots" content="index, follow">
<meta name="author" content="Atle Hansson">
<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:title" content="{{ meta.title }}">
<meta name="twitter:site" content="{{ siteTitle }}">
<meta name="twitter:image" content="{{ baseUrl }}{{ socialImage }}">
<meta name="twitter:image:alt" content="Social sharing image for hgrid.io">
<meta name="twitter:description" content="{{ meta.description }}">
<meta name="twitter:creator" content="@h4n5s0n">
<meta property="og:site_name" content="{{ siteTitle }}">
<meta property="og:title" content="{{ meta.title }}">
<meta property="og:description" content="{{ meta.description }}">
<meta property="og:url" content="{{ currentUrl }}">
<meta property="og:type" content="website">
<meta property="og:image" content="{{ baseUrl }}{{ socialImage }}">
<meta property="og:image:alt" content="Social sharing image for hgrid.io">
<meta property="og:image:width" content="1200">
<meta property="og:image:height" content="628">

<script type="text/javascript">
  const colorMode = (() => {
    const initialMode = () => {
      const persistedMode = window.localStorage.getItem('theme')
      const hasPersistedMode = typeof persistedMode === 'string'
      if (hasPersistedMode) {
        return persistedMode
      }
      const preferredMode = window.matchMedia('(prefers-color-scheme: dark)')
      const hasPreferredMode = typeof preferredMode.matches === 'boolean'
      if (hasPreferredMode) {
        return preferredMode.matches ? 'dark' : 'light'
      }
      return 'light' // default if no preference found
    }
    const preferredTheme = initialMode()
    document.documentElement.setAttribute('data-theme', preferredTheme)
    const meta = document.createElement('meta')
    meta.name = 'theme-color'
    if (preferredTheme === 'dark') { meta.content = '#060323' } 
    else { meta.content = '#23004b'}
    document.getElementsByTagName('head')[0].prepend(meta)
    return { preferredTheme, meta }
  })();
</script>

<script defer data-domain="hgrid.io" data-api="/assets/api/event" src="/assets/js/script.js?v=1.0.0"></script>