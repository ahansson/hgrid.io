
{%- set baseUrl = 'https://hgrid.io' %}
{%- set pageTitle = title + ' | ' + 'hgrid' -%}
{%- set siteTitle = 'hgrid | Lightweight CSS Utility Kit' -%}
{%- set currentUrl = baseUrl + page.url -%}

<meta charset="UTF-8">
<title>{{ meta.title }}</title>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="description" content="{{ meta.description }}">
<meta name="robots" content="index, follow">
<meta name="author" content="Atle Hansson">
<link rel="stylesheet" href="/assets/css/hgrid.1.3.css">
<link rel="preconnect" href="https://fonts.gstatic.com">
<link href="https://fonts.googleapis.com/css2?family=Heebo:wght@400;600&display=swap" rel="stylesheet">
<link rel="stylesheet" href="/assets/css/styles.css">
<link rel="icon" type="image/png" href="/assets/img/icon.png">
<link rel="canonical" href="{{ currentUrl }}" />

<meta property="og:site_name" content="{{ siteTitle }}" />
<meta property="og:title" content="{{ pageTitle }}" />
<meta property="og:type" content="website" />
<meta property="og:url" content="{{ currentUrl }}" />

<meta name="twitter:card" content="...." />
<meta property="og:image" content="{{ thumbnail }}" />
<meta name="twitter:image" content="{{ thumbnail }}" />
<meta property="og:image:alt" content="Page image for {{ site.name }}" />
<meta name="twitter:image:alt" content="Page image for {{ site.name }}" />
<meta property="og:image:width" content="1200" />
<meta property="og:image:height" content="630" />

<meta name="description" content="{{ description }}" />
<meta name="twitter:description" content="{{ description }}" />
<meta property="og:description" content="{{ description }}" />
<script type="text/javascript">

const colorMode = (() => {
  const initialMode = () => {
    const persistedMode = window.localStorage.getItem('theme')
    const hasPersistedMode = typeof persistedMode === 'string'
    if (hasPersistedMode) {
      return persistedMode
    }
    const preferredMode = window.matchMedia('(prefers-color-scheme: dark)')
    const hasPreferredMode = typeof preferredMode.matches === 'boolean'
    if (hasPreferredMode) {
      return preferredMode.matches ? 'dark' : 'light'
    }
    return 'light' // default if no preference found
  }
  const preferredTheme = initialMode()
  document.documentElement.setAttribute('data-theme', preferredTheme)
  return { preferredTheme }
})()

</script>